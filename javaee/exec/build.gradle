dependencies {
    implementation project(':api')
    implementation project(':rt')
    implementation project(':tooling')

    implementation 'org.msgpack:msgpack-core:0.8.17'
    implementation 'org.slf4j:slf4j-api:1.7.26'

    testCompile(
        'org.junit.jupiter:junit-jupiter-api:5.9.0',
        'org.ow2.asm:asm:7.0',
        'org.ow2.asm:asm-util:7.0'
    )

    testImplementation(
        'org.junit.jupiter:junit-jupiter-engine:5.9.0',
        project(':samples'),
        project(':logger'),
        files(project(':rt').sourceSets.test.output),
    )
}

task compileNative(type: Exec) {
    workingDir 'src/native'
    commandLine 'make'
}

def outputNative = "$buildDir/native"
if (file(outputNative).exists()) {
    compileNative.enabled = false
}

sourceSets {
    main {
        output.dir(outputNative, builtBy: 'compileNative')
    }
}

compileTestJava {
    options.compilerArgs += ['-parameters']
}

test {
    useJUnitPlatform()
}
